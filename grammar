<program>       ::= <function> {<endl> <function>} {<endl> <operator>}
<function>      ::= <prototype> <assert> <stmt>
<prototype>     ::= <ident> <open-brack> <ident> {<delimiter> <ident>}<close-brack>
<stmt>          ::= <exp> {<impl> <exp>}
<exp>           ::= <term> {<sum> <term>}
<term>          ::= <factor> {<mul> <factor>}
<factor>        ::= <unary> <factor> |
                    <paren> |
                    <call>  | 
                    <ident> |
                    <digit>
<paren>         ::= <open-brack> <stmt> <close-brack>
<call>          ::= <ident> <open-brack> <stmt> {<delimiter> <stmt>} <close-brack>
<unary>         ::= <not> | <inc> | <dec> | <zero-to-neg> | <zero-to-pos>
<not>         	::= "~"
<inc>         	::= "++"
<dec>         	::= "--"
<zero-to-neg>   ::= "?"
<zero-to-pos>   ::= "!"
<endl>          ::= "\n"
<assert>        ::= ":="
<open-brack>    ::= "("
<delimiter>     ::= ","
<close-brack>   ::= ")"
<impl>      	::= "->" | "+>"
<sum>           ::= "|" | "#" | "+" | "-"
<mul>           ::= "&" | "*"
<ident>         ::= "[a-z][_a-zA-Z0-9]*"
<ident>         ::= "[a-zA-Z][_a-zA-Z0-9]*"
<digit>         ::= "$" | "-?[0-1]"
